Deleting duplicate records from table using different ways 
METHOD 1 : USING MAX(ID) QUERY IF ID IN PRIMARY KEY IN TABLE 
select * from customer where id not in (select max(id) from customer group by name,age,salary);
delete from customer where id not in (select max(id) from customer group by name,age,salary);

METHOD 2: (THIS METHOD IS CORRECT FOR INTERVIEW THOUGH IT WAS NOT WORKING IN MY SQL WITH DELETE COMMAND ,WORKING WITH SELECT STATEMENT.)

WITH CTE (id,name,age,salary,rnk) AS
(select id,age,name,salary,row_number over(partition by age,name,salary)rnk
from customer) delete from CTE where rnk > 1

YouTube_Practice problems
q1.
select team_name,count(team_name) as match_played,sum(win_flag) as matches_won,count(team_name)-sum(win_flag) as matches_lost from(
select team_1 as team_name, case when team_1=winner then 1 else 0 end as win_flag from icc_world_cup
union all 
select team_2 as team_name, case when team_2=winner then 1 else 0 end as win_flag from icc_world_cup)A group by team_name;

q2.create table customer_orders
(order_id integer,customer_id integer,order_date date,order_account integer);

insert into customer_orders(order_id,customer_id,order_date,order_account)
values(1,100,'2022-01-01',2000);

insert into customer_orders(order_id,customer_id,order_date,order_account)
values(2,200,'2022-01-01',2500);
insert into customer_orders(order_id,customer_id,order_date,order_account)
values(3,300,'2022-01-01',2000);
insert into customer_orders(order_id,customer_id,order_date,order_account)
values(4,100,'2022-01-02',2000);
insert into customer_orders(order_id,customer_id,order_date,order_account)
values(5,400,'2022-01-02',2200);
insert into customer_orders(order_id,customer_id,order_date,order_account)
values(6,500,'2022-01-02',2700);
insert into customer_orders(order_id,customer_id,order_date,order_account)
values(7,100,'2022-01-03',3000);
insert into customer_orders(order_id,customer_id,order_date,order_account)
values(8,400,'2022-01-03',1000);
insert into customer_orders(order_id,customer_id,order_date,order_account)
values(9,600,'2022-01-03',3000);

COMMON TABLE EXPRESSION



with first_visit as (
select customer_id,min(order_date) as first_visit from customer_orders group by customer_id )
,visit_flag as
(select co.*,fv.first_visit,case when co.order_date=fv.first_visit then 1 else 0 end as first_visit_flag,
case when co.order_date!=fv.first_visit then 1 else 0 end as repeat_visit_flag 
from customer_orders co
inner join first_visit fv on co.customer_id=fv.customer_id order by order_id)
,final_query as (select order_date,sum(first_visit_flag) as new_customers,sum(repeat_visit_flag) as repeat_customers from visit_flag 
group by order_date)
select new_customers,repeat_customers from final_query;


with first_visit as (
select customer_id,min(order_date) as first_visit from customer_orders group by customer_id )
,visit_flag as (select co.order_date,order_account,fv.first_visit,case when co.order_date=fv.first_visit then 1 else 0 end as first_visit_flag,
case when co.order_date!=fv.first_visit then 1 else 0 end as repeat_visit_flag 
from customer_orders co
inner join first_visit fv on co.customer_id=fv.customer_id order by order_id)
select order_date,sum(first_visit_flag) as new_customers,sum(repeat_visit_flag) as repeat_customers,
case when first_visit_flag=1 then sum(order_account) end as new_revenue,
case when repeat_visit_flag=1 then sum(order_account) end as old_revenue from visit_flag 
group by order_date;

select new_customers,repeat_customers from final_query;


with first_visit as (
select customer_id,min(order_date) as first_visit from customer_orders group by customer_id )
,visit_flag as (select co.order_date,order_account,fv.first_visit,case when co.order_date=fv.first_visit then 1 else 0 end as first_visit_flag,
case when co.order_date!=fv.first_visit then 1 else 0 end as repeat_visit_flag 
from customer_orders co
inner join first_visit fv on co.customer_id=fv.customer_id order by order_id)
select order_date,sum(first_visit_flag) as new_customers,sum(repeat_visit_flag) as repeat_customers,order_account
from visit_flag 
group by order_date;


git remote add origin https://github.com/pathakch/python_programming.git
https://github.com/pathakch/Basic_Coding.git

remote: Support for password authentication was removed on August 13, 2021.
remote: Please see https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.

